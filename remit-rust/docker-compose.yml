version: '3.8'

services:
  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: remit-dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -inMemory"
    networks:
      - remit-network

  dynamodb-init:
    image: amazon/aws-cli:latest
    container_name: remit-dynamodb-init
    environment:
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=us-east-1
    command: >
      /bin/sh -c "
      aws dynamodb create-table --table-name remit_transactions --endpoint-url http://dynamodb:8000 --key-schema AttributeName=transaction_id,KeyType=HASH --attribute-definitions AttributeName=transaction_id,AttributeType=S AttributeName=user_id,AttributeType=S AttributeName=status,AttributeType=S AttributeName=created_at,AttributeType=N --global-secondary-indexes 'IndexName=UserIdIndex,KeySchema=[{AttributeName=user_id,KeyType=HASH},{AttributeName=created_at,KeyType=RANGE}],Projection={ProjectionType=ALL}' 'IndexName=StatusCreatedAtIndex,KeySchema=[{AttributeName=status,KeyType=HASH},{AttributeName=created_at,KeyType=RANGE}],Projection={ProjectionType=ALL}' --billing-mode PAY_PER_REQUEST &&
      aws dynamodb create-table --table-name remit_exchange_rates --endpoint-url http://dynamodb:8000 --key-schema AttributeName=date,KeyType=HASH AttributeName=timestamp,KeyType=RANGE --attribute-definitions AttributeName=date,AttributeType=S AttributeName=timestamp,AttributeType=N AttributeName=source_currency,AttributeType=S AttributeName=destination_currency,AttributeType=S --global-secondary-indexes 'IndexName=CurrencyPairIndex,KeySchema=[{AttributeName=source_currency,KeyType=HASH},{AttributeName=destination_currency,KeyType=RANGE}],Projection={ProjectionType=ALL}' --billing-mode PAY_PER_REQUEST
      "
    depends_on:
      - dynamodb
    networks:
      - remit-network

  wiremock:
    image: wiremock/wiremock:latest
    container_name: remit-wiremock
    ports:
      - "9001:8080"  # UPI mock
      - "9002:8080"  # AD Bank mock
      - "9003:8080"  # Wise mock
      - "9004:8080"  # User Service mock
    volumes:
      - ./wiremock:/home/wiremock
    command: --global-response-templating
    networks:
      - remit-network

networks:
  remit-network:
    driver: bridge 