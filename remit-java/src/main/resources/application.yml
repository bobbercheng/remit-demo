spring:
  application:
    name: remit-service
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# API Documentation with OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.remitservice: DEBUG
    org.springframework.web: INFO
    org.springframework.data.dynamodb: INFO

# Integration Configurations
integration:
  # UPI Integration Configuration for collecting funds in India
  upi:
    baseUrl: https://api.upi-partner.com
    apiKey: ${UPI_API_KEY:dummy-api-key}
    callbackUrl: ${UPI_CALLBACK_URL:http://localhost:8080/api/v1/callbacks/upi}
    timeoutSeconds: 30
  
  # AD Bank Integration for currency exchange
  adbank:
    baseUrl: https://api.adbank-partner.com
    apiKey: ${ADBANK_API_KEY:dummy-api-key}
    timeoutSeconds: 30
  
  # Wise Integration for cross-border disbursement
  wise:
    baseUrl: https://api.wise.com
    apiKey: ${WISE_API_KEY:dummy-api-key}
    profileId: ${WISE_PROFILE_ID:dummy-profile-id}
    callbackUrl: ${WISE_CALLBACK_URL:http://localhost:8080/api/v1/callbacks/wise}
    timeoutSeconds: 30

# Business Rules and Configurations
remittance:
  # Supported currencies and limits
  minimumAmount: 1000 # INR
  maximumAmount: 1000000 # INR
  # List of supported source currencies (currently only INR)
  supportedSourceCurrencies:
    - INR
  # List of supported destination currencies (currently only CAD)
  supportedDestinationCurrencies:
    - CAD
  # Exchange rate validity in minutes
  exchangeRateValidity: 15
  # Expected processing time in hours
  processingTimeHours: 24
  # Fee structure
  fee:
    percentage: 0.5
    flat: 100 # INR
  # Retry configuration for callbacks
  callback:
    retryDelaySeconds: 60
    maxRetries: 3

# AWS DynamoDB Configuration
aws:
  dynamodb:
    endpoint: ${DYNAMODB_ENDPOINT:http://localhost:8000}
    region: ${AWS_REGION:us-east-1}
    accessKey: ${AWS_ACCESS_KEY:dummy-access-key}
    secretKey: ${AWS_SECRET_KEY:dummy-secret-key}
  
# DynamoDB table names
dynamodb:
  table:
    transaction: remit_transaction
    payment: remit_payment
    exchangeRate: remit_exchange_rate
    disbursement: remit_disbursement

# Resilience4j Configuration
resilience4j:
  retry:
    instances:
      upiClient:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      adBankClient:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
      wiseClient:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
  circuitbreaker:
    instances:
      upiClient:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
      adBankClient:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
      wiseClient:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    health:
      show-details: always 